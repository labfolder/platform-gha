name: "Trigger CircleCI Build"
description: "Trigger the build pipeline in the current branch. Intended to build all docker images and charts required to deploy the application."
inputs:
  cci_token:
    description: 'CircleCI PAT used to trigger the pipeline. It must be a PAT instead of project token'
    required: true
  branch:
    description: 'Branch name used to build. It will be used the last commit available in this branch. Defaults to the branch triggering the workflow.'
    default: ${GITHUB_REF#refs/heads/}
    required: true
  build_param:
    description: 'CircleCI parameter used to trigger the build action. Defaults to [build]'
    default: 'build'
  wait_for_cci_result:
    description: 'Wait for CircleCI pipeline to complete'
    required: true
    default: 'false'
  docker_build_job_name:
    description: 'Name of the product`s job that build and push the application`s docker image'
    required: true
    default: 'docker-build-and-push'
outputs:
  cci_response:
    description: 'Response of the CircleCI request'
    value: ${{ steps.cci_build.outputs.cci_response }}
runs:
  using: "composite"
  steps:
    - name: Trigger CircleCI Build Workflow.
      shell: bash
      id: trigger_cci
      env:
        CCI_TOKEN: ${{ inputs.cci_token }}
      run: |
        PROJECT_SLUG=circleci/5JBARKjC9duevdMYTL5Eit/DxsBAJbPyXpz8qNfxBcuAV
        REQUEST_PARAMS='{\"definition_id\": \"3736b82a-cefd-46a2-b50d-96291ec9099b\", \"config\": {\"branch\": \"$GITHUB_REF_NAME\"}, \"checkout\": {\"branch\": \"$GITHUB_REF_NAME\"}, \"parameters\": {\"${{ inputs.build_param }}\": true}}'
        
        echo "Triggering pipeline using the {${{ inputs.build_param }}} parameter in the {${{ inputs.branch }}} branch for the {$PROJECT_SLUG} project SLUG."
        
        eval echo "$REQUEST_PARAMS" > pipelineparams.json
        RESPONSE=$(curl --header "Content-Type: application/json" \
          --header "Circle-Token: ${CCI_TOKEN}" \
          -d @pipelineparams.json \
          https://circleci.com/api/v2/project/${PROJECT_SLUG}/pipeline/run | jq -r '.id')
        echo "CCI_RESPONSE=${RESPONSE}" >> "$GITHUB_OUTPUT"
    - name: Wait for CircleCI Build Workflow.
      if: ${{ inputs.wait_for_cci_result }}
      shell: bash
      env:
        CCI_RESPONSE: ${{steps.trigger_cci.outputs.CCI_RESPONSE}}
        CCI_TOKEN: ${{ inputs.cci_token }}
        CCI_BUILD_NAME: ${{ inputs.docker_build_job_name }}
      run: 
        PIPELINE=https://app.circleci.com/pipelines/circleci/5JBARKjC9duevdMYTL5Eit/DxsBAJbPyXpz8qNfxBcuAV
        echo "response:${CCI_RESPONSE}"
        echo "Waiting 30 seconds before start checking CircleCI status."
        sleep 60
        echo https://circleci.com/api/v2/pipeline/$CCI_RESPONSE/workflow
        echo https://circleci.com/api/v2/pipeline/${CCI_RESPONSE}/workflow
        curl -v --header "Circle-Token:${CCI_TOKEN}" \"https://circleci.com/api/v2/pipeline/$CCI_RESPONSE/workflow\"
        echo 'Build failed'
        exit 1

